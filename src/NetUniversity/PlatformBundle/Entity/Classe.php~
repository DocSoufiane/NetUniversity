<?php

namespace NetUniversity\PlatformBundle\Entity;

use Doctrine\ORM\Mapping as ORM;


/**
 * Classe
 *
 * @ORM\Table(name="classe")
 * @ORM\Entity(repositoryClass="NetUniversity\PlatformBundle\Repository\ClasseRepository")
 */
class Classe
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="Nom", type="string", length=255)
     */
    private $nom;

    /**
   * @ORM\OneToMany(targetEntity="NetUniversity\PlatformBundle\Entity\Sujet", mappedBy="classe")
   * @ORM\JoinColumn(nullable=false)
   */
      private $sujet;

   /**
   * @ORM\ManyToOne(targetEntity="NetUniversity\PlatformBundle\Entity\Filiere", inversedBy="classe")
   * @ORM\JoinColumn(nullable=false)
   */
      private $filiere;
    /**
     * @var \DateTime
     *
     * @ORM\Column(name="dateDeCreation", type="datetime", nullable=true)
     */
    private $dateDeCreation;

    /**
   * @ORM\OneToOne(targetEntity="NetUniversity\PlatformBundle\Entity\Utilisateur", cascade={"persist"})
   * @ORM\JoinColumn(nullable=false)
   */
      private $owner;


    /**
   * @ORM\OneToMany(targetEntity="NetUniversity\PlatformBundle\Entity\Utilisateur", mappedBy="classe")
   * @ORM\JoinColumn(nullable=true)
   */
    private $Etudiant;


  /**
   * @ORM\ManyToMany(targetEntity="NetUniversity\PlatformBundle\Entity\Cours", inversedBy="classePartage")
   * @ORM\JoinTable(name="netuniversity_Support_PartageAvec_Classe")
   */
  private $support;


    /**
     * Get id.
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set nom.
     *
     * @param string $nom
     *
     * @return Classe
     */
    public function setNom($nom)
    {
        $this->nom = $nom;

        return $this;
    }

    /**
     * Get nom.
     *
     * @return string
     */
    public function getNom()
    {
        return $this->nom;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    
    /**
     * Set dateDeCreation.
     *
     * @param \DateTime|null $dateDeCreation
     *
     * @return Classe
     */
    public function setDateDeCreation($dateDeCreation = null)
    {
        $this->dateDeCreation = $dateDeCreation;

        return $this;
    }

    /**
     * Get dateDeCreation.
     *
     * @return \DateTime|null
     */
    public function getDateDeCreation()
    {
        return $this->dateDeCreation;
    }

    /**
     * Set filiere.
     *
     * @param \NetUniversity\PlatformBundle\Entity\Filiere $filiere
     *
     * @return Classe
     */
    public function setFiliere(\NetUniversity\PlatformBundle\Entity\Filiere $filiere)
    {
        $this->filiere = $filiere;

        return $this;
    }

    /**
     * Get filiere.
     *
     * @return \NetUniversity\PlatformBundle\Entity\Filiere
     */
    public function getFiliere()
    {
        return $this->filiere;
    }

    /**
     * Set owner.
     *
     * @param \NetUniversity\PlatformBundle\Entity\Utilisateur $owner
     *
     * @return Classe
     */
    public function setOwner(\NetUniversity\PlatformBundle\Entity\Utilisateur $owner)
    {
        $this->owner = $owner;

        return $this;
    }

    /**
     * Get owner.
     *
     * @return \NetUniversity\PlatformBundle\Entity\Utilisateur
     */
    public function getOwner()
    {
        return $this->owner;
    }

    /**
     * Add etudiant.
     *
     * @param \NetUniversity\PlatformBundle\Entity\Utilisateur $etudiant
     *
     * @return Classe
     */
    public function addEtudiant(\NetUniversity\PlatformBundle\Entity\Utilisateur $etudiant)
    {
        $this->Etudiant[] = $etudiant;

        return $this;
    }

    /**
     * Remove etudiant.
     *
     * @param \NetUniversity\PlatformBundle\Entity\Utilisateur $etudiant
     *
     * @return boolean TRUE if this collection contained the specified element, FALSE otherwise.
     */
    public function removeEtudiant(\NetUniversity\PlatformBundle\Entity\Utilisateur $etudiant)
    {
        return $this->Etudiant->removeElement($etudiant);
    }

    /**
     * Get etudiant.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getEtudiant()
    {
        return $this->Etudiant;
    }

    /**
     * Add support.
     *
     * @param \NetUniversity\PlatformBundle\Entity\Cours $support
     *
     * @return Classe
     */
    public function addSupport(\NetUniversity\PlatformBundle\Entity\Cours $support)
    {
        $this->support[] = $support;

        return $this;
    }

    /**
     * Remove support.
     *
     * @param \NetUniversity\PlatformBundle\Entity\Cours $support
     *
     * @return boolean TRUE if this collection contained the specified element, FALSE otherwise.
     */
    public function removeSupport(\NetUniversity\PlatformBundle\Entity\Cours $support)
    {
        return $this->support->removeElement($support);
    }

    /**
     * Get support.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getSupport()
    {
        return $this->support;
    }
}
